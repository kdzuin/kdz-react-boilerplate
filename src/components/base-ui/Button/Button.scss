//
// Button
//
// @maintainer: Konstantin Dzuin (kdzuin@gmail.com)
//

@import 'base-ui/_common/colours.reference';

//
// BUTTON
//

$button-border-width: 1px;
$button-border-radius: 8px;

$button-size-small: 32px;
$button-size-medium: 40px;
$button-size-large: 44px;
$button-size-xlarge: 56px;

.button {
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: top;
    box-sizing: border-box;
    width: 100%;
    margin: 0;
    padding: 5px 0; // the vertical padding is for the rare case the text is multi-line
    border-radius: $button-border-radius;
    text-align: center;
    cursor: pointer;

    &::before {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: '';
        border-radius: inherit;
        opacity: 0;
        transition: opacity .2s;
    }

    .brick {
        margin: 0;
    }
}

.ie11 .button,
button.button {
    // we can't work with buttons as a flex element. need to fall back to block.
    // ie11 has a problem with vertical alignment and min-height on the container
    display: table;

    .button__content {
        display: table-cell;
        vertical-align: middle;
        text-align: center;
    }
}

// CONTENT

.button__content {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    pointer-events: none;
}

.button__icon {
    display: block;
    flex: 0 0 auto;
}

.button__text {
    display: block;
    flex: 0 1 auto;
    transition: color .2s;
}

.button__icon + .button__text {
    margin-left: 7px;
}

.button__loader {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: $button-size-small;
    height: $button-size-small;
    margin: auto;
}


// SIZE

.button--sm {
    min-width: $button-size-small;
    min-height: $button-size-small;
    padding-right: 15px;
    padding-left: 15px;
    font-size: 13px;
    line-height: 19px;
}

.button--md {
    min-width: $button-size-medium;
    min-height: $button-size-medium;
    padding-right: 15px;
    padding-left: 15px;
    font-size: 14px;
    line-height: 19px;
}

.button--lg {
    min-width: $button-size-large;
    min-height: $button-size-large;
    padding-right: 20px;
    padding-left: 20px;
    font-size: 16px;
    line-height: 19px;
}

.button--xlg {
    min-width: $button-size-xlarge;
    min-height: $button-size-xlarge;
    padding-right: 30px;
    padding-left: 30px;
    font-size: 16px;
    line-height: 20px;
}


// OPTIONS

.button--narrow {
    max-width: 100%;
    width: auto;
}

.button--light {
    border-radius: 999px;
}

.button--icon-only {
    padding: 0;
}

// TYPE

.button--filled {
    border: none;
    background-color: currentColor;

    .button__content,
    .button__loader {
        color: #fff;
    }
}

.button--stroke {
    border: $button-border-width solid currentColor;
    background: transparent;
}

.button--transparent {
    border: none;
    background: transparent;
}

.button--monochrome {
    border: none;
    background: $colour-base-inverted;

    &::before {
        border: $button-border-width solid rgba(0, 0, 0, .15);
        opacity: 1;
        transition: border .2s, opacity .2s;
    }

    .button__icon,
    .button__text {
        color: $colour-base;
    }
}


// STATUS

// pressed
.button--filled {
    &::before {
        background-color: $colour-base-inverted;
    }

    .trigger-button-hover:hover &:not(.trigger-ignore)::before,
    &:hover::before,
    &.is-hovered::before {
        background-color: $colour-base-inverted;
        opacity: .1;
    }

    &:active::before,
    &.is-pressed::before {
        background-color: $colour-base-inverted;
        opacity: .2;
    }
}

.button--monochrome {
    .trigger-button-hover:hover &:not(.trigger-ignore),
    &:hover,
    &.is-hovered {
        &::before {
            border: $button-border-width solid currentColor;
            color: currentColor;
        }

        .button__icon,
        .button__text {
            color: currentColor;
        }
    }

    &:active,
    &.is-pressed {
        &::before {
            border: $button-border-width solid currentColor;
            color: currentColor;
        }

        .button__icon,
        .button__text {
            color: currentColor;
        }
    }

    &:disabled,
    &.is-disabled {
        .button__icon,
        .button__text {
            color: var(--black);
        }
    }
}

// disabled
.button {
    &:disabled,
    &.is-disabled {
        opacity: .3;
        cursor: default;

        &::before {
            content: none;
        }
    }
}

// loading
.button {
    &.is-loading {
        .button__content {
            opacity: 0;
        }
    }
}


// CHROME

// color
.button--color-primary { color: $colour-primary; }
.button--color-red-carrot { color: $colour-red-carrot; }
.button--color-pink-rose { color: $colour-pink-rose; }
.button--color-yellow-sun { color: $colour-yellow-sun; }
.button--color-green-dew { color: $colour-green-dew; }
.button--color-green-grass { color: $colour-green-grass; }
.button--color-purple-lavanda { color: $colour-purple-lavanda; }
.button--color-blue-sky { color: $colour-blue-sky; }
.button--color-blue-rain { color: $colour-blue-rain; }
.button--color-gray-40 { color: $colour-gray-40; }
.button--color-inherited { color: inherit; }
